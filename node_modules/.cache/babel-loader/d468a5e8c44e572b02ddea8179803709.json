{"ast":null,"code":"var _jsxFileName = \"/Users/saadamirpk/Documents/GitHub/meme-gen-react/src/Components/BoxChallenge.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport BoxData from \"../Data/BoxData\";\nimport \"../Css/box.css\";\nimport Box from \"./Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoxChallenge() {\n  _s();\n\n  const [boxes, setBoxes] = useState(BoxData);\n  const [msgs, setMsgs] = useState([\"a\"]);\n  useEffect(() => {\n    let c = 0;\n\n    for (let i = 0; i < boxes.length; i++) {\n      if (boxes[i].on) {\n        c = c + 1;\n      }\n    }\n\n    for (let i = c; i < c; i++) {}\n  }, boxes);\n\n  function toggleOn(bid) {\n    setBoxes(prevBoxes => {\n      return prevBoxes.map(square => {\n        return square.id === bid ? { ...square,\n          on: !square.on\n        } : square;\n      });\n    });\n  }\n\n  const boxesDisplay = boxes.map(box => /*#__PURE__*/_jsxDEV(Box, {\n    toggle: () => toggleOn(box.id),\n    on: box.on\n  }, box.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: boxesDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: msgs.length > 0 ? \"You have \" + msgs.length + \" unread \" + (msgs.length == 1 ? \"message\" : \"messages\") : \"You're all caught up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoxChallenge, \"nAQHFemkUajIJYYKFC9onyiIw6I=\");\n\n_c = BoxChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxChallenge\");","map":{"version":3,"sources":["/Users/saadamirpk/Documents/GitHub/meme-gen-react/src/Components/BoxChallenge.tsx"],"names":["React","useEffect","useState","BoxData","Box","BoxChallenge","boxes","setBoxes","msgs","setMsgs","c","i","length","on","toggleOn","bid","prevBoxes","map","square","id","boxesDisplay","box"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACC,OAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,GAAD,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,CAASE,EAAb,EAAiB;AACfH,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;AACF;;AACD,SAAK,IAAIC,CAAC,GAAGD,CAAb,EAAgBC,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B,CAAE;AAC/B,GARQ,EAQNL,KARM,CAAT;;AAUA,WAASQ,QAAT,CAAkBC,GAAlB,EAA+B;AAC7BR,IAAAA,QAAQ,CAAES,SAAD,IAAe;AACtB,aAAOA,SAAS,CAACC,GAAV,CAAeC,MAAD,IAAY;AAC/B,eAAOA,MAAM,CAACC,EAAP,KAAcJ,GAAd,GAAoB,EAAE,GAAGG,MAAL;AAAaL,UAAAA,EAAE,EAAE,CAACK,MAAM,CAACL;AAAzB,SAApB,GAAoDK,MAA3D;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,QAAME,YAAY,GAAGd,KAAK,CAACW,GAAN,CAAWI,GAAD,iBAC7B,QAAC,GAAD;AAAkB,IAAA,MAAM,EAAE,MAAMP,QAAQ,CAACO,GAAG,CAACF,EAAL,CAAxC;AAAkD,IAAA,EAAE,EAAEE,GAAG,CAACR;AAA1D,KAAUQ,GAAG,CAACF,EAAd;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGZ,IAAI,CAACI,MAAL,GAAc,CAAd,GACG,cACAJ,IAAI,CAACI,MADL,GAEA,UAFA,IAGCJ,IAAI,CAACI,MAAL,IAAe,CAAf,GAAmB,SAAnB,GAA+B,UAHhC,CADH,GAKG;AANN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtCuBP,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BoxData from \"../Data/BoxData\";\nimport \"../Css/box.css\";\nimport Box from \"./Box\";\n\nexport default function BoxChallenge() {\n  const [boxes, setBoxes] = useState(BoxData);\n  const [msgs, setMsgs] = useState([\"a\"]);\n\n  useEffect(() => {\n    let c = 0;\n    for (let i = 0; i < boxes.length; i++) {\n      if (boxes[i].on) {\n        c = c + 1;\n      }\n    }\n    for (let i = c; i < c; i++) {}\n  }, boxes);\n\n  function toggleOn(bid: number) {\n    setBoxes((prevBoxes) => {\n      return prevBoxes.map((square) => {\n        return square.id === bid ? { ...square, on: !square.on } : square;\n      });\n    });\n  }\n\n  const boxesDisplay = boxes.map((box) => (\n    <Box key={box.id} toggle={() => toggleOn(box.id)} on={box.on} />\n  ));\n  return (\n    <div>\n      <div className=\"box-container\">{boxesDisplay}</div>\n      <h2>\n        {msgs.length > 0\n          ? \"You have \" +\n            msgs.length +\n            \" unread \" +\n            (msgs.length == 1 ? \"message\" : \"messages\")\n          : \"You're all caught up\"}\n      </h2>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}